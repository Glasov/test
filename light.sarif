{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Positive Technologies Application Inspector",
          "organization": "Positive Technologies",
          "informationUri": "https://www.ptsecurity.com/ww-en/products/ai/",
          "rules": [
            {
              "id": "Override equals method without hashCode",
              "name": "Override equals() method without overriding hashCode() and vice versa",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Direct Use of Threads",
              "name": "Direct Use of Threads",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Hardcoded Password PM",
              "name": "Use of Hard-coded Password",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Class defines clone but not implement Cloneable",
              "name": "Class defines clone() but doesn't implement Cloneable",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Use of Insufficiently Random Values",
              "name": "Use of Insufficiently Random Values",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Arbitrary File Reading",
              "name": "Arbitrary File Reading",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Empty Default Exception Handler",
              "name": "Empty Default Exception Handler",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Exposure of System Data to an Unauthorized Control Sphere",
              "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Log Forging",
              "name": "Log Forging",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Missing Encryption of Sensitive Data",
              "name": "Missing Encryption of Sensitive Data",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Method Without Super clone",
              "name": "clone() Method Without super.clone()",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Use of Function with Inconsistent Implementations",
              "name": "Use of Function with Inconsistent Implementations",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Weak Cryptographic Hash",
              "name": "Weak Cryptographic Hash",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Poor Logging Practice Logger",
              "name": "Poor logging practice. Declare logger not static or final",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Potential Path Traversal",
              "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Server-Side Request Forgery",
              "name": "Server-Side Request Forgery",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Arbitrary File Creation",
              "name": "Arbitrary File Creation",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Static Random Number Generator",
              "name": "Static Random Number Generator",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Information Exposure Through Comments",
              "name": "Inclusion of Sensitive Information in Source Code Comments",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Arbitrary File Deletion",
              "name": "Arbitrary File Deletion",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 42,
                  "endLine": 15,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\"http://gitflic.ru\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 49,
                  "endLine": 23,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\"http://gitflic.ru\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 71,
                  "endLine": 23,
                  "endColumn": 90,
                  "snippet": {
                    "text": "\"http://gitflic.ru\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 64,
                  "endLine": 26,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\"http://gitflic.ru\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 36,
                  "endLine": 31,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\"http://gitflic.ru\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 69,
                  "endLine": 31,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\"http://gitflic.ru\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 62,
                  "endLine": 34,
                  "endColumn": 81,
                  "snippet": {
                    "text": "\"http://gitflic.ru\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 27,
                  "endLine": 45,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\"http://gitflic.ru\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 68,
                  "endLine": 45,
                  "endColumn": 120,
                  "snippet": {
                    "text": "\"http://gitflic.ru?code=code&state=state&test=st%26\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 61,
                  "endLine": 54,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\"http://gitflic.ru?code=code&state=state&test=st%26\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 9,
                  "endLine": 83,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\"http://gitflic.ru/user/admin?cert=123&art=hfndhd\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 13,
                  "endLine": 84,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\"http://gitflic.ru/user/admin/setting?path=123&sert=hfndhd\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 13,
                  "endLine": 90,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\"http://gitflic.ru:8080/user/admin?cert=123&art=hfndhd\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 17,
                  "endLine": 91,
                  "endColumn": 81,
                  "snippet": {
                    "text": "\"http://gitflic.ru:8080/user/admin/setting?path=123&sert=hfndhd\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 13,
                  "endLine": 98,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\"http://gitflic.ru/user/admin/setting?path=123&sert=hfndhd\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 9,
                  "endLine": 104,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\"http://gitflic.ru/user/admin?cert=123&art=hfndhd\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/util/URIUtilTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 17,
                  "endLine": 133,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\"http://gitflic.ru/user/admin/setting?path=123&sert=hfndhd\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Method Without Super clone",
          "level": "note",
          "message": {
            "text": "clone() Method Without super.clone()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/CommitTreeFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 12,
                  "endLine": 105,
                  "endColumn": 6,
                  "snippet": {
                    "text": "TreeFilter clone() { throw new UnsupportedOperationException(); }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Class defines clone but not implement Cloneable",
          "level": "note",
          "message": {
            "text": "Class defines clone() but doesn't implement Cloneable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/CommitTreeFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 8,
                  "endLine": 107,
                  "endColumn": 2,
                  "snippet": {
                    "text": "class CommitTreeFilter extends TreeFilter { private final byte[] treePathRaw; private boolean[] changed; private AtomicReference<String> childRef; public CommitTreeFilter( byte[] treePathRaw, boolean[] changed, AtomicReference<String> childRef ) { ... return true; } else { return false; } } } else { return false; } } @Override public boolean shouldBeRecursive() { throw new UnsupportedOperationException(); } @Override public TreeFilter clone() { throw new UnsupportedOperationException(); } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Method Without Super clone",
          "level": "note",
          "message": {
            "text": "clone() Method Without super.clone()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/CommitRevFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 12,
                  "endLine": 174,
                  "endColumn": 6,
                  "snippet": {
                    "text": "RevFilter clone() { throw new UnsupportedOperationException(); }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Class defines clone but not implement Cloneable",
          "level": "note",
          "message": {
            "text": "Class defines clone() but doesn't implement Cloneable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/CommitRevFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 8,
                  "endLine": 196,
                  "endColumn": 2,
                  "snippet": {
                    "text": "class CommitRevFilter extends RevFilter { private static final int PARSED = RevWalk.PARSED; private final byte[] treePathRaw; private final LastCommitCache cache; private final Set<String> children; private final Set<String> modifiedChildren; private ... (!p.has(cached)) { p.add(cached); /* * Further caches parent of parent if the parent has already been * visited as otherwise it will not have a chance to get its parents * cached */ if (p.has(visited)) cacheParents(p.getParents(), cached, visited); } } } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Method Without Super clone",
          "level": "note",
          "message": {
            "text": "clone() Method Without super.clone()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/LastCommitsOfChildren2.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 15,
                  "endLine": 250,
                  "endColumn": 9,
                  "snippet": {
                    "text": "TreeFilter clone() { throw new UnsupportedOperationException(); }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Method Without Super clone",
          "level": "note",
          "message": {
            "text": "clone() Method Without super.clone()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/LastCommitsOfChildren2.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 12,
                  "endLine": 309,
                  "endColumn": 6,
                  "snippet": {
                    "text": "RevFilter clone() { throw new UnsupportedOperationException(); }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Override equals method without hashCode",
          "level": "note",
          "message": {
            "text": "Override equals() method without overriding hashCode() and vice versa"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/LastCommitsOfChildren2.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 14,
                  "endLine": 444,
                  "endColumn": 2,
                  "snippet": {
                    "text": "class LastCommitsOfChildren2 extends HashMap<String, LastCommitsOfChildren2.Value> { private static final long serialVersionUID = 1L; private static final int PARSED = RevWalk.PARSED; public LastCommitsOfChildren2(Repository repo, AnyObjectId until) { ... false; } } public String toJson() { return Json.to(toCommitModel()).toString(); } @Override public String toString() { return id.name(); } } public static interface Cache { @Nullable Map<String, Value> getLastCommitsOfChildren(ObjectId commitId); } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Override equals method without hashCode",
          "level": "note",
          "message": {
            "text": "Override equals() method without overriding hashCode() and vice versa"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/LastCommitsOfChildren2.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 16,
                  "endLine": 435,
                  "endColumn": 3,
                  "snippet": {
                    "text": "class Value implements Serializable { private static final long serialVersionUID = 1L; private final ObjectId id; private final PersonIdent commiter; private final PersonIdent author; private final Date commitDate; private final String summary; private ... obj) { if (obj instanceof Value) { Value value = (Value) obj; return id.equals(value.getId()); } else { return false; } } public String toJson() { return Json.to(toCommitModel()).toString(); } @Override public String toString() { return id.name(); } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Class defines clone but not implement Cloneable",
          "level": "note",
          "message": {
            "text": "Class defines clone() but doesn't implement Cloneable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/LastCommitsOfChildren2.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 14,
                  "endLine": 444,
                  "endColumn": 2,
                  "snippet": {
                    "text": "class LastCommitsOfChildren2 extends HashMap<String, LastCommitsOfChildren2.Value> { private static final long serialVersionUID = 1L; private static final int PARSED = RevWalk.PARSED; public LastCommitsOfChildren2(Repository repo, AnyObjectId until) { ... false; } } public String toJson() { return Json.to(toCommitModel()).toString(); } @Override public String toString() { return id.name(); } } public static interface Cache { @Nullable Map<String, Value> getLastCommitsOfChildren(ObjectId commitId); } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Class defines clone but not implement Cloneable",
          "level": "note",
          "message": {
            "text": "Class defines clone() but doesn't implement Cloneable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/LastCommitsOfChildren2.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 29,
                  "endLine": 311,
                  "endColumn": 5,
                  "snippet": {
                    "text": "RevFilter() { @Override public boolean include(RevWalk revWalker, RevCommit commit) throws StopWalkException, MissingObjectException, IncorrectObjectTypeException, IOException { commit.add(visited); Map<String, Value> lastCommits = lastCommitsRef.get(); ... only if it is determined as last commit // of some children return !modifiedChildren.isEmpty(); } } @Override public boolean requiresCommitBody() { return false; } @Override public RevFilter clone() { throw new UnsupportedOperationException(); } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Class defines clone but not implement Cloneable",
          "level": "note",
          "message": {
            "text": "Class defines clone() but doesn't implement Cloneable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/org/eclipse/jgit/revwalk/LastCommitsOfChildren2.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 32,
                  "endLine": 252,
                  "endColumn": 8,
                  "snippet": {
                    "text": "TreeFilter() { @Override public boolean include(TreeWalk walker) throws MissingObjectException, IncorrectObjectTypeException, IOException { if (treePathRaw.length == 0 || walker.isPathPrefix(treePathRaw, treePathRaw.length) == 0) { // we will enter into ... return true; } else { return false; } } } else { return false; } } @Override public boolean shouldBeRecursive() { throw new UnsupportedOperationException(); } @Override public TreeFilter clone() { throw new UnsupportedOperationException(); } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Exposure of System Data to an Unauthorized Control Sphere",
          "level": "note",
          "message": {
            "text": "Exposure of Sensitive System Information to an Unauthorized Control Sphere"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashInputStream.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 32,
                  "snippet": {
                    "text": "e.printStackTrace()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Exposure of System Data to an Unauthorized Control Sphere",
          "level": "note",
          "message": {
            "text": "Exposure of Sensitive System Information to an Unauthorized Control Sphere"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/QRCodeGenerator.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 32,
                  "snippet": {
                    "text": "e.printStackTrace()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/PipelineUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 19,
                  "endLine": 56,
                  "endColumn": 68,
                  "snippet": {
                    "text": "RedisTemplate<String, LogModel> logModelTemplate;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/FileSendUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 13,
                  "endLine": 56,
                  "endColumn": 14,
                  "snippet": {
                    "text": "try { if(Objects.nonNull(source)) source.close(); } catch (IOException closeError) { // Ignore any error closing the stream. }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/servlet/SmartOutputStream.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 79,
                  "endColumn": 18,
                  "snippet": {
                    "text": "try { try (GZIPOutputStream gzip = new GZIPOutputStream(gzbuf)) { this.writeTo(gzip, null); } if (gzbuf.length() < this.length()) { rsp.setHeader(HDR_CONTENT_ENCODING, ENCODING_GZIP); writeResponse(gzbuf); return; } } catch (IOException err) { // Most likely caused by overflowing the buffer, meaning // its larger if it were compressed. Discard compressed // copy and use the original. }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/PeriodDurationUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 9,
                  "endLine": 37,
                  "endColumn": 47,
                  "snippet": {
                    "text": "try { period = Period.parse(iso); } catch (DateTimeParseException ex) {}"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/PeriodDurationUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 9,
                  "endLine": 63,
                  "endColumn": 47,
                  "snippet": {
                    "text": "try { duration = Duration.parse(iso); } catch (DateTimeParseException ex) {}"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/servlet/ServletUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 14,
                  "snippet": {
                    "text": "try { consumeRequestBody(req.getInputStream()); } catch (IOException e) { // Ignore any errors obtaining the input stream. }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/servlet/ServletUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 9,
                  "endLine": 118,
                  "endColumn": 10,
                  "snippet": {
                    "text": "try { while (0 < in.skip(2048) || 0 <= in.read()) { // Discard until EOF. } } catch (IOException err) { // Discard IOException during read or skip. } finally { try { in.close(); } catch (IOException err) { // Discard IOException during close of input stream. } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/servlet/ServletUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 13,
                  "endLine": 117,
                  "endColumn": 14,
                  "snippet": {
                    "text": "try { in.close(); } catch (IOException err) { // Discard IOException during close of input stream. }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Information Exposure Through Comments",
          "level": "note",
          "message": {
            "text": "Inclusion of Sensitive Information in Source Code Comments"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/configuration/RedissonConfiguration.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 19,
                  "endLine": 82,
                  "endColumn": 29,
                  "snippet": {
                    "text": "password ="
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Information Exposure Through Comments",
          "level": "note",
          "message": {
            "text": "Inclusion of Sensitive Information in Source Code Comments"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/configuration/RedissonConfiguration.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 30,
                  "endLine": 145,
                  "endColumn": 40,
                  "snippet": {
                    "text": "Password ="
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Information Exposure Through Comments",
          "level": "note",
          "message": {
            "text": "Inclusion of Sensitive Information in Source Code Comments"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/configuration/RedissonConfiguration.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 31,
                  "endLine": 154,
                  "endColumn": 41,
                  "snippet": {
                    "text": "Password ="
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/security/LfsTokenAuthenticationManager.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 9,
                  "endLine": 56,
                  "endColumn": 10,
                  "snippet": {
                    "text": "try { if (authentication instanceof LfsToken) { return processAuthentication((LfsToken) authentication); } else { authentication.setAuthenticated(false); return authentication; } } catch (AuthenticationServiceException ex) { throw ex; } catch (LimitRequestAuthenticationException ex) { throw ex; } catch (Exception ex) { }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Hardcoded Password PM",
          "level": "note",
          "message": {
            "text": "Use of Hard-coded Password"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/security/LdapAuthenticationFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 26,
                  "endLine": 20,
                  "endColumn": 47,
                  "snippet": {
                    "text": "password = \"password\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/security/DeployTokenAuthenticationManager.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 9,
                  "endLine": 69,
                  "endColumn": 34,
                  "snippet": {
                    "text": "try { if (authentication instanceof DeployToken) { return processAuthentication((DeployToken) authentication); } else { return authentication; } } catch (AuthenticationServiceException ex) { throw ex; } catch (Exception ex) {}"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Hardcoded Password PM",
          "level": "note",
          "message": {
            "text": "Use of Hard-coded Password"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/security/GitFlicAuthenticationProvider.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 33,
                  "endLine": 38,
                  "endColumn": 81,
                  "snippet": {
                    "text": "USER_NOT_FOUND_PASSWORD = \"userNotFoundPassword\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Information Exposure Through Comments",
          "level": "note",
          "message": {
            "text": "Inclusion of Sensitive Information in Source Code Comments"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/security/GitFlicAuthenticationProvider.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 74,
                  "endLine": 45,
                  "endColumn": 85,
                  "snippet": {
                    "text": "password is"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Static Random Number Generator",
          "level": "note",
          "message": {
            "text": "Static Random Number Generator"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/BitAvatarGenerator.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 29,
                  "endLine": 54,
                  "endColumn": 37,
                  "snippet": {
                    "text": "Random()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 451,
                  "startColumn": 21,
                  "endLine": 454,
                  "endColumn": 22,
                  "snippet": {
                    "text": "try { Thread.sleep(5000); } catch (InterruptedException e2) { }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 475,
                  "startColumn": 21,
                  "endLine": 478,
                  "endColumn": 22,
                  "snippet": {
                    "text": "try { Thread.sleep(100); } catch (InterruptedException e2) { }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 9,
                  "endLine": 305,
                  "endColumn": 10,
                  "snippet": {
                    "text": "try(RevWalk revWalk = new RevWalk(repository)) { tag = revWalk.parseTag(objectId); // ref points to an annotated tag revWalk.dispose(); } catch(IncorrectObjectTypeException notAnAnnotatedTag) { // LOGGER.info(\"Could not get tag. Tag not annotated\", notAnAnnotatedTag); } catch (IOException e) { LOGGER.info(\"Could not get tag\", e); }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/LogServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 19,
                  "endLine": 20,
                  "endColumn": 81,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(LogServiceImpl.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/component/jackson/SegmentModelMarshallingTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13,
                  "endLine": 25,
                  "endColumn": 43,
                  "snippet": {
                    "text": "LogLineModel testLogLineModel;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/PayerServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 19,
                  "endLine": 23,
                  "endColumn": 83,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(PayerServiceImpl.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Direct Use of Threads",
          "level": "note",
          "message": {
            "text": "Direct Use of Threads"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/PostCommitAdapter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 9,
                  "endLine": 30,
                  "endColumn": 23,
                  "snippet": {
                    "text": "runnable.run()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Hardcoded Password PM",
          "level": "note",
          "message": {
            "text": "Use of Hard-coded Password"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/CacheKeys.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 12,
                  "endLine": 71,
                  "endColumn": 59,
                  "snippet": {
                    "text": "RUNNER_ACCESS_TOKEN_KEY = \"runner-access-token\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Use of Function with Inconsistent Implementations",
          "level": "note",
          "message": {
            "text": "Use of Function with Inconsistent Implementations"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/service/repository/CommitServiceImplTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 53,
                  "endLine": 58,
                  "endColumn": 97,
                  "snippet": {
                    "text": "File(\"./src/test/resources/gitForTest/.git\")"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Use of Function with Inconsistent Implementations",
          "level": "note",
          "message": {
            "text": "Use of Function with Inconsistent Implementations"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/service/repository/CommitServiceImplTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 39,
                  "endLine": 70,
                  "endColumn": 78,
                  "snippet": {
                    "text": "File(\"./src/test/resources/gitForTest\")"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Static Random Number Generator",
          "level": "note",
          "message": {
            "text": "Static Random Number Generator"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/service/user/UserToProjectServiceImplTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 33,
                  "endLine": 52,
                  "endColumn": 41,
                  "snippet": {
                    "text": "Random()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Static Random Number Generator",
          "level": "note",
          "message": {
            "text": "Static Random Number Generator"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/service/user/UserToProjectServiceImplTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 36,
                  "endLine": 55,
                  "endColumn": 44,
                  "snippet": {
                    "text": "Random()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Static Random Number Generator",
          "level": "note",
          "message": {
            "text": "Static Random Number Generator"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/service/user/UserToProjectServiceImplTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 33,
                  "endLine": 58,
                  "endColumn": 41,
                  "snippet": {
                    "text": "Random()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Use of Insufficiently Random Values",
          "level": "note",
          "message": {
            "text": "Use of Insufficiently Random Values"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/service/user/UserToProjectServiceImplTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 33,
                  "endLine": 52,
                  "endColumn": 50,
                  "snippet": {
                    "text": "Random().nextLong"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Use of Insufficiently Random Values",
          "level": "note",
          "message": {
            "text": "Use of Insufficiently Random Values"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/service/user/UserToProjectServiceImplTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 36,
                  "endLine": 55,
                  "endColumn": 53,
                  "snippet": {
                    "text": "Random().nextLong"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Use of Insufficiently Random Values",
          "level": "note",
          "message": {
            "text": "Use of Insufficiently Random Values"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/service/user/UserToProjectServiceImplTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 33,
                  "endLine": 58,
                  "endColumn": 50,
                  "snippet": {
                    "text": "Random().nextLong"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Exposure of System Data to an Unauthorized Control Sphere",
          "level": "note",
          "message": {
            "text": "Exposure of Sensitive System Information to an Unauthorized Control Sphere"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/test/java/com/gitflic/core/service/ci/PipelineConfigModelParserServiceTest.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 13,
                  "endLine": 70,
                  "endColumn": 32,
                  "snippet": {
                    "text": "e.printStackTrace()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/AbstractAvatarGenerator.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 27,
                  "endLine": 60,
                  "endColumn": 44,
                  "snippet": {
                    "text": "new java.io.File((dir.getAbsolutePath() + java.io.File.separator) + fileName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/component/AbstractAvatarGenerator.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 59,
                            "startColumn": 27,
                            "endLine": 60,
                            "endColumn": 44,
                            "snippet": {
                              "text": "new java.io.File((dir.getAbsolutePath() + java.io.File.separator) + fileName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Static Random Number Generator",
          "level": "note",
          "message": {
            "text": "Static Random Number Generator"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/BitAvatarGenerator.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 21,
                  "endLine": 58,
                  "endColumn": 39,
                  "snippet": {
                    "text": "random.nextDouble()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Static Random Number Generator",
          "level": "note",
          "message": {
            "text": "Static Random Number Generator"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/FontAvatarGenerator.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 34,
                  "endLine": 109,
                  "endColumn": 39,
                  "snippet": {
                    "text": "java.util.concurrent.ThreadLocalRandom.current().nextInt(colors.size())"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/security/manager/TokenAuthenticationManager.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 9,
                  "endLine": 70,
                  "endColumn": 10,
                  "snippet": {
                    "text": "try { if (authentication instanceof OauthToken) { OauthToken readyTokenAuthentication = processAuthentication((OauthToken) authentication); return readyTokenAuthentication; } else { authentication.setAuthenticated(false); return authentication; } } catch (AuthenticationServiceException ex) { throw ex; } catch (LimitRequestAuthenticationException ex) { throw ex; } catch (Exception ex) { }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Static Random Number Generator",
          "level": "note",
          "message": {
            "text": "Static Random Number Generator"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/FontAvatarGenerator.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 34,
                  "endLine": 122,
                  "endColumn": 39,
                  "snippet": {
                    "text": "java.util.concurrent.ThreadLocalRandom.current().nextInt(colors.size())"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Static Random Number Generator",
          "level": "note",
          "message": {
            "text": "Static Random Number Generator"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/FontAvatarGenerator.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 34,
                  "endLine": 134,
                  "endColumn": 39,
                  "snippet": {
                    "text": "java.util.concurrent.ThreadLocalRandom.current().nextInt(colors.size())"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/transport/SshTransportServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 19,
                  "endLine": 76,
                  "endColumn": 51,
                  "snippet": {
                    "text": "EventLogService eventLogService;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/trace/LogStateModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 13,
                  "endLine": 7,
                  "endColumn": 48,
                  "snippet": {
                    "text": "LogModel logModel = new LogModel();"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/log/DefaultEventLogService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 19,
                  "endLine": 32,
                  "endColumn": 51,
                  "snippet": {
                    "text": "LogEventGateway logEventGateway;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/log/DefaultEventLogService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 19,
                  "endLine": 33,
                  "endColumn": 57,
                  "snippet": {
                    "text": "EventLogRepository eventLogRepository;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/log/DefaultEventLogService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 19,
                  "endLine": 34,
                  "endColumn": 71,
                  "snippet": {
                    "text": "UserLogEventDataConverter userLogEventDataConverter;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/log/DefaultEventLogService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 19,
                  "endLine": 35,
                  "endColumn": 81,
                  "snippet": {
                    "text": "UserModelLogEventDataConverter userModelLogEventDataConverter;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/log/DefaultEventLogService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 19,
                  "endLine": 36,
                  "endColumn": 87,
                  "snippet": {
                    "text": "ProjectModelLogEventDataConverter projectModelLogEventDataConverter;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/trace/LogModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 59,
                  "snippet": {
                    "text": "List<LogLineModel> lines = new LinkedList<>();"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/trace/LogModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 59,
                  "snippet": {
                    "text": "LogLineModel currentLine = new LogLineModel();"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/project/ProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 19,
                  "endLine": 68,
                  "endColumn": 85,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(ProjectServiceImpl.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/repository/MirrorServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 19,
                  "endLine": 48,
                  "endColumn": 80,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(MirrorService.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/project/BaseImportServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 19,
                  "endLine": 43,
                  "endColumn": 88,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(BaseImportServiceImpl.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/project/RemovedProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 19,
                  "endLine": 33,
                  "endColumn": 92,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(RemovedProjectServiceImpl.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/project/ProjectSizeInfoServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 19,
                  "endLine": 18,
                  "endColumn": 93,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(ProjectSizeInfoServiceImpl.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/markdown/RelativeLinksFormatter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 13,
                  "endLine": 84,
                  "endColumn": 14,
                  "snippet": {
                    "text": "try { if (RepositoryUtil.isDirectory(repository, commit, url)) { url = UrlUtil.generateDirectoryUrl(projectAlias, ownerAlias, branch, commitName, url); } else { url = UrlUtil.generateBlobUrl(projectAlias, ownerAlias, branch, commitName, url, false); } } catch (Exception e) { // No-op. }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Method Without Super clone",
          "level": "note",
          "message": {
            "text": "clone() Method Without super.clone()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/notification/NotificationService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 5,
                  "endLine": 16,
                  "endColumn": 54,
                  "snippet": {
                    "text": "Notification clone(@NotNull Notification source);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Class defines clone but not implement Cloneable",
          "level": "note",
          "message": {
            "text": "Class defines clone() but doesn't implement Cloneable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/notification/NotificationService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 8,
                  "endLine": 76,
                  "endColumn": 2,
                  "snippet": {
                    "text": "interface NotificationService extends CrudService<Notification, Long> { Notification clone(@NotNull Notification source); List<Notification> save(Iterable<Notification> notifications); Page<Notification> findAllByUserId(@NotNull Long userId, Pageable ... entityType, @NotNull Long entityId); void deleteAllByCreatedAtBefore(@NotNull LocalDateTime createdAt); void deleteAllByUserIdAndIsSavedIsFalse(@NotNull Long userId); void deleteAllByUserIdAndIsSavedIsFalseAndIsReadIsTrue(@NotNull Long userId); }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Method Without Super clone",
          "level": "note",
          "message": {
            "text": "clone() Method Without super.clone()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/notification/NotificationServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 12,
                  "endLine": 67,
                  "endColumn": 6,
                  "snippet": {
                    "text": "Notification clone(@NotNull Notification source) { Notification result = new Notification(); result.setTitle(source.getTitle()); result.setActor(source.getActor()); result.setEntityId(source.getEntityId()); result.setEntityType(source.getEntityType()); result.setEntityNumber(source.getEntityNumber()); result.setEventName(source.getEventName()); result.setMessage(source.getMessage()); result.setProject(source.getProject()); result.setProjectId(source.getProjectId()); return result; }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Class defines clone but not implement Cloneable",
          "level": "note",
          "message": {
            "text": "Class defines clone() but doesn't implement Cloneable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/notification/NotificationServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 8,
                  "endLine": 338,
                  "endColumn": 2,
                  "snippet": {
                    "text": "class NotificationServiceImpl extends AbstractCrudService<Notification, Long> implements NotificationService { private static final Logger LOGGER = LoggerFactory.getLogger(NotificationServiceImpl.class); private final ProjectService projectService; ... Long userId) { repository.deleteAllByUserIdAndIsSavedIsFalse(userId); } @Override @Transactional public void deleteAllByUserIdAndIsSavedIsFalseAndIsReadIsTrue(@NotNull Long userId) { repository.deleteAllByUserIdAndIsSavedIsFalseAndIsReadIsTrue(userId); } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/notification/NotificationEntryPointServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 9,
                  "endLine": 95,
                  "endColumn": 10,
                  "snippet": {
                    "text": "try { return Optional.of(factory.getInstance(commonEventName)); } catch (IllegalArgumentException ignored) { }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/cache/ProjectReleaseFilesSizeCacheUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 19,
                  "endLine": 18,
                  "endColumn": 99,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(ProjectReleaseFilesSizeCacheUtil.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/mergerequest/MergeRecursiveServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 9,
                  "endLine": 32,
                  "endColumn": 41,
                  "snippet": {
                    "text": "try { this.targetTip = repository.resolve(targetTip); this.srcTip = repository.resolve(srcTip); } catch (IOException ignored) {}"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/cache/RegistryFilesSizeCacheUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 19,
                  "endLine": 24,
                  "endColumn": 93,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(RegistryFilesSizeCacheUtil.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/mergerequest/MergeRecursiveServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 9,
                  "endLine": 112,
                  "endColumn": 10,
                  "snippet": {
                    "text": "try { RevCommit sourceCommit = revWalk.parseCommit(srcTip); RevCommit targetCommit = revWalk.parseCommit(targetTip); // must re-lookup RevCommits to workaround undocumented RevWalk bug return revWalk.isMergedInto(sourceCommit, targetCommit); } catch (Exception e) { } finally { revWalk.dispose(); }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Exposure of System Data to an Unauthorized Control Sphere",
          "level": "note",
          "message": {
            "text": "Exposure of Sensitive System Information to an Unauthorized Control Sphere"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/mergerequest/MergeRecursiveServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 13,
                  "endLine": 173,
                  "endColumn": 32,
                  "snippet": {
                    "text": "e.printStackTrace()"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/cache/JobArtifactFilesProjectSizeCacheUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 19,
                  "endLine": 18,
                  "endColumn": 103,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(JobArtifactFilesProjectSizeCacheUtil.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Hardcoded Password PM",
          "level": "note",
          "message": {
            "text": "Use of Hard-coded Password"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/api/impl/GitflicApiUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 32,
                  "endLine": 20,
                  "endColumn": 81,
                  "snippet": {
                    "text": "GITFLIC_WEBHOOK_SECRET = \"Gitflic-Webhook-Secret\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/report/ReportServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 19,
                  "endLine": 42,
                  "endColumn": 84,
                  "snippet": {
                    "text": "Logger LOGGER = LoggerFactory.getLogger(ReportServiceImpl.class);"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/git/hook/server/FileSystemHookExecutor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 13,
                  "endLine": 171,
                  "endColumn": 14,
                  "snippet": {
                    "text": "try { this.copy(); } catch (IOException ignored) { }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Hardcoded Password PM",
          "level": "note",
          "message": {
            "text": "Use of Hard-coded Password"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/git/hook/pushRules/PushRuleSecretFiles.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 33,
                  "endLine": 41,
                  "endColumn": 86,
                  "snippet": {
                    "text": "SECRETS_NOT_ALLOWED = \"файлы с секретами недопустимы\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Method Without Super clone",
          "level": "note",
          "message": {
            "text": "clone() Method Without super.clone()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/git/treewalk/filter/FileNameFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 12,
                  "endLine": 62,
                  "endColumn": 6,
                  "snippet": {
                    "text": "TreeFilter clone() { return this; }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Class defines clone but not implement Cloneable",
          "level": "note",
          "message": {
            "text": "Class defines clone() but doesn't implement Cloneable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/git/treewalk/filter/FileNameFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 8,
                  "endLine": 68,
                  "endColumn": 2,
                  "snippet": {
                    "text": "class FileNameFilter extends TreeFilter { private final String fileNameStr; private final byte[] fileNameRaw; private final boolean ignoreCase; public static FileNameFilter create( @NotNull String fileName ) { return create(fileName, false); } public ... : 0 == walker.isPathMatch(fileNameRaw, fileNameRaw.length); } @Override public boolean shouldBeRecursive() { return false; } @Override public TreeFilter clone() { return this; } public String toString() { return \"FILE_NAME(\\\"\" + fileNameStr + \"\\\")\"; } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Method Without Super clone",
          "level": "note",
          "message": {
            "text": "clone() Method Without super.clone()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/git/treewalk/filter/FilePathFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 12,
                  "endLine": 84,
                  "endColumn": 6,
                  "snippet": {
                    "text": "TreeFilter clone() { return this; }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Class defines clone but not implement Cloneable",
          "level": "note",
          "message": {
            "text": "Class defines clone() but doesn't implement Cloneable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/git/treewalk/filter/FilePathFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 8,
                  "endLine": 86,
                  "endColumn": 2,
                  "snippet": {
                    "text": "class FilePathFilter extends TreeFilter { private static final Logger LOGGER = LoggerFactory.getLogger(FilePathFilter.class); private final String fileName; private final boolean ignoreCase; private final String filePathStr; private final byte[] ... + \"/\" + fileName; byte[] fullPathRaw = Constants.encode(fullPath); return walker.isPathMatch(fullPathRaw, fullPathRaw.length) == 0; } } @Override public boolean shouldBeRecursive() { return true; } @Override public TreeFilter clone() { return this; } }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/event/log/data/LogEventData.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 13,
                  "endLine": 7,
                  "endColumn": 36,
                  "snippet": {
                    "text": "EventLogName eventName;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/dto/ci/dto/Location.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13,
                  "endLine": 50,
                  "endColumn": 58,
                  "snippet": {
                    "text": "Set<LogicalLocation> logicalLocations = null;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/nuget/feed/FeedSchemaConstance.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 20,
                  "endLine": 5,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\"http://www.w3.org/2005/Atom\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/nuget/feed/FeedSchemaConstance.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 22,
                  "endLine": 6,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\"http://schemas.microsoft.com/ado/2007/08/dataservices\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/nuget/feed/FeedSchemaConstance.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 22,
                  "endLine": 7,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/nuget/feed/FeedSchemaConstance.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 27,
                  "endLine": 8,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\"http://www.georss.org/georss\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/nuget/feed/FeedSchemaConstance.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 24,
                  "endLine": 9,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\"http://www.opengis.net/gml\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Missing Encryption of Sensitive Data",
          "level": "note",
          "message": {
            "text": "Missing Encryption of Sensitive Data"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/component/properties/objectstorage/ConnectionProperties.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 31,
                  "endLine": 5,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\"http://localhost:4566/\""
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/dto/ci/dto/ExternalProperties.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 13,
                  "endLine": 116,
                  "endColumn": 58,
                  "snippet": {
                    "text": "Set<LogicalLocation> logicalLocations = null;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Empty Default Exception Handler",
          "level": "note",
          "message": {
            "text": "Empty Default Exception Handler"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/transport/ssh/server/command/GitPackCommand.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 9,
                  "endLine": 121,
                  "endColumn": 10,
                  "snippet": {
                    "text": "try { try { getErrorStream().write(errorMessage.getBytes(StandardCharsets.UTF_8)); getErrorStream().write(10); } finally { getErrorStream().flush(); } } catch (IOException var6) { }"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Poor Logging Practice Logger",
          "level": "note",
          "message": {
            "text": "Poor logging practice. Declare logger not static or final"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/dto/ci/dto/Run.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 13,
                  "endLine": 106,
                  "endColumn": 58,
                  "snippet": {
                    "text": "Set<LogicalLocation> logicalLocations = null;"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/form/project/release/ReleaseTagEditForm.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 20,
                  "endLine": 28,
                  "endColumn": 33,
                  "snippet": {
                    "text": "new java.io.File(path)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/form/project/release/ReleaseTagEditForm.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 28,
                            "startColumn": 20,
                            "endLine": 28,
                            "endColumn": 33,
                            "snippet": {
                              "text": "new java.io.File(path)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 16,
                  "endLine": 133,
                  "endColumn": 47,
                  "snippet": {
                    "text": "new java.io.File(lfsObjectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 133,
                            "startColumn": 16,
                            "endLine": 133,
                            "endColumn": 47,
                            "snippet": {
                              "text": "new java.io.File(lfsObjectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 16,
                  "endLine": 133,
                  "endColumn": 47,
                  "snippet": {
                    "text": "new java.io.File(lfsObjectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 133,
                            "startColumn": 16,
                            "endLine": 133,
                            "endColumn": 47,
                            "snippet": {
                              "text": "new java.io.File(lfsObjectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 16,
                  "endLine": 133,
                  "endColumn": 47,
                  "snippet": {
                    "text": "new java.io.File(lfsObjectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 133,
                            "startColumn": 16,
                            "endLine": 133,
                            "endColumn": 47,
                            "snippet": {
                              "text": "new java.io.File(lfsObjectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 16,
                  "endLine": 133,
                  "endColumn": 47,
                  "snippet": {
                    "text": "new java.io.File(lfsObjectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 133,
                            "startColumn": 16,
                            "endLine": 133,
                            "endColumn": 47,
                            "snippet": {
                              "text": "new java.io.File(lfsObjectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 42,
                  "endLine": 154,
                  "endColumn": 88,
                  "snippet": {
                    "text": "new java.io.FileInputStream(getLfsObjectFile(objectId))"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 154,
                            "startColumn": 42,
                            "endLine": 154,
                            "endColumn": 88,
                            "snippet": {
                              "text": "new java.io.FileInputStream(getLfsObjectFile(objectId))"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 16,
                  "endLine": 133,
                  "endColumn": 47,
                  "snippet": {
                    "text": "new java.io.File(lfsObjectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 133,
                            "startColumn": 16,
                            "endLine": 133,
                            "endColumn": 47,
                            "snippet": {
                              "text": "new java.io.File(lfsObjectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 16,
                  "endLine": 133,
                  "endColumn": 47,
                  "snippet": {
                    "text": "new java.io.File(lfsObjectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/model/advice/LfsProjectModel.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 133,
                            "startColumn": 16,
                            "endLine": 133,
                            "endColumn": 47,
                            "snippet": {
                              "text": "new java.io.File(lfsObjectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/model/assembler/repo/ReleaseTagModelAssembler.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 20,
                  "endLine": 24,
                  "endColumn": 52,
                  "snippet": {
                    "text": "new java.io.File(entity.getPathRelease())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/model/assembler/repo/ReleaseTagModelAssembler.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 24,
                            "startColumn": 20,
                            "endLine": 24,
                            "endColumn": 52,
                            "snippet": {
                              "text": "new java.io.File(entity.getPathRelease())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Log Forging",
          "message": {
            "text": "Log Forging"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/security/GitFlicLdapAuthenticationProvider.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 17,
                  "endLine": 61,
                  "endColumn": 113,
                  "snippet": {
                    "text": "com.gitflic.core.security.GitFlicLdapAuthenticationProvider.LOGGER.error(\"Can't auth user because ldap connection is disabled {}\", ldapConnection.getName())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/security/GitFlicLdapAuthenticationProvider.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 61,
                            "startColumn": 17,
                            "endLine": 61,
                            "endColumn": 113,
                            "snippet": {
                              "text": "com.gitflic.core.security.GitFlicLdapAuthenticationProvider.LOGGER.error(\"Can't auth user because ldap connection is disabled {}\", ldapConnection.getName())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 17,
                  "endLine": 467,
                  "endColumn": 29,
                  "snippet": {
                    "text": "file.delete()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 467,
                            "startColumn": 17,
                            "endLine": 467,
                            "endColumn": 29,
                            "snippet": {
                              "text": "file.delete()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 16,
                  "endLine": 349,
                  "endColumn": 71,
                  "snippet": {
                    "text": "new java.io.File(project.getRepositoryFilePath(), \"lfs/objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 349,
                            "startColumn": 16,
                            "endLine": 349,
                            "endColumn": 71,
                            "snippet": {
                              "text": "new java.io.File(project.getRepositoryFilePath(), \"lfs/objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 16,
                  "endLine": 349,
                  "endColumn": 71,
                  "snippet": {
                    "text": "new java.io.File(project.getRepositoryFilePath(), \"lfs/objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 349,
                            "startColumn": 16,
                            "endLine": 349,
                            "endColumn": 71,
                            "snippet": {
                              "text": "new java.io.File(project.getRepositoryFilePath(), \"lfs/objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 26,
                  "endLine": 353,
                  "endColumn": 119,
                  "snippet": {
                    "text": "new java.io.File(getLfsObjectsDir(project), (objectId.substring(0, 2) + \"/\") + objectId.substring(2, 4))"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 353,
                            "startColumn": 26,
                            "endLine": 353,
                            "endColumn": 119,
                            "snippet": {
                              "text": "new java.io.File(getLfsObjectsDir(project), (objectId.substring(0, 2) + \"/\") + objectId.substring(2, 4))"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 16,
                  "endLine": 361,
                  "endColumn": 44,
                  "snippet": {
                    "text": "new java.io.File(objectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 361,
                            "startColumn": 16,
                            "endLine": 361,
                            "endColumn": 44,
                            "snippet": {
                              "text": "new java.io.File(objectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 16,
                  "endLine": 361,
                  "endColumn": 44,
                  "snippet": {
                    "text": "new java.io.File(objectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 361,
                            "startColumn": 16,
                            "endLine": 361,
                            "endColumn": 44,
                            "snippet": {
                              "text": "new java.io.File(objectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 16,
                  "endLine": 349,
                  "endColumn": 71,
                  "snippet": {
                    "text": "new java.io.File(project.getRepositoryFilePath(), \"lfs/objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 349,
                            "startColumn": 16,
                            "endLine": 349,
                            "endColumn": 71,
                            "snippet": {
                              "text": "new java.io.File(project.getRepositoryFilePath(), \"lfs/objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 26,
                  "endLine": 353,
                  "endColumn": 119,
                  "snippet": {
                    "text": "new java.io.File(getLfsObjectsDir(project), (objectId.substring(0, 2) + \"/\") + objectId.substring(2, 4))"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 353,
                            "startColumn": 26,
                            "endLine": 353,
                            "endColumn": 119,
                            "snippet": {
                              "text": "new java.io.File(getLfsObjectsDir(project), (objectId.substring(0, 2) + \"/\") + objectId.substring(2, 4))"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 16,
                  "endLine": 361,
                  "endColumn": 44,
                  "snippet": {
                    "text": "new java.io.File(objectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 361,
                            "startColumn": 16,
                            "endLine": 361,
                            "endColumn": 44,
                            "snippet": {
                              "text": "new java.io.File(objectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 16,
                  "endLine": 361,
                  "endColumn": 44,
                  "snippet": {
                    "text": "new java.io.File(objectDir, objectId)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 361,
                            "startColumn": 16,
                            "endLine": 361,
                            "endColumn": 44,
                            "snippet": {
                              "text": "new java.io.File(objectDir, objectId)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 42,
                  "endLine": 382,
                  "endColumn": 97,
                  "snippet": {
                    "text": "new java.io.FileInputStream(getLfsObjectFile(project, objectId))"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 382,
                            "startColumn": 42,
                            "endLine": 382,
                            "endColumn": 97,
                            "snippet": {
                              "text": "new java.io.FileInputStream(getLfsObjectFile(project, objectId))"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 16,
                  "endLine": 349,
                  "endColumn": 71,
                  "snippet": {
                    "text": "new java.io.File(project.getRepositoryFilePath(), \"lfs/objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/ForkProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 349,
                            "startColumn": 16,
                            "endLine": 349,
                            "endColumn": 71,
                            "snippet": {
                              "text": "new java.io.File(project.getRepositoryFilePath(), \"lfs/objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/InvoiceServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 29,
                  "endLine": 283,
                  "endColumn": 60,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(\"MD5\")"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1155,
                  "startColumn": 33,
                  "endLine": 1155,
                  "endColumn": 58,
                  "snippet": {
                    "text": "new java.io.File(gitdir, fileName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 1155,
                            "startColumn": 33,
                            "endLine": 1155,
                            "endColumn": 58,
                            "snippet": {
                              "text": "new java.io.File(gitdir, fileName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1155,
                  "startColumn": 33,
                  "endLine": 1155,
                  "endColumn": 58,
                  "snippet": {
                    "text": "new java.io.File(gitdir, fileName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 1155,
                            "startColumn": 33,
                            "endLine": 1155,
                            "endColumn": 58,
                            "snippet": {
                              "text": "new java.io.File(gitdir, fileName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Server-Side Request Forgery",
          "level": "error",
          "message": {
            "text": "Server-Side Request Forgery"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 39,
                  "endLine": 77,
                  "endColumn": 54,
                  "snippet": {
                    "text": "javax.imageio.ImageIO.read(in)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 77,
                            "startColumn": 39,
                            "endLine": 77,
                            "endColumn": 54,
                            "snippet": {
                              "text": "javax.imageio.ImageIO.read(in)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 21,
                  "endLine": 292,
                  "endColumn": 68,
                  "snippet": {
                    "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 292,
                            "startColumn": 21,
                            "endLine": 292,
                            "endColumn": 68,
                            "snippet": {
                              "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 13,
                  "endLine": 295,
                  "endColumn": 48,
                  "snippet": {
                    "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 295,
                            "startColumn": 13,
                            "endLine": 295,
                            "endColumn": 48,
                            "snippet": {
                              "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 21,
                  "endLine": 292,
                  "endColumn": 68,
                  "snippet": {
                    "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 292,
                            "startColumn": 21,
                            "endLine": 292,
                            "endColumn": 68,
                            "snippet": {
                              "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 13,
                  "endLine": 295,
                  "endColumn": 48,
                  "snippet": {
                    "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 295,
                            "startColumn": 13,
                            "endLine": 295,
                            "endColumn": 48,
                            "snippet": {
                              "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Server-Side Request Forgery",
          "level": "error",
          "message": {
            "text": "Server-Side Request Forgery"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 39,
                  "endLine": 77,
                  "endColumn": 54,
                  "snippet": {
                    "text": "javax.imageio.ImageIO.read(in)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 77,
                            "startColumn": 39,
                            "endLine": 77,
                            "endColumn": 54,
                            "snippet": {
                              "text": "javax.imageio.ImageIO.read(in)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 21,
                  "endLine": 292,
                  "endColumn": 68,
                  "snippet": {
                    "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 292,
                            "startColumn": 21,
                            "endLine": 292,
                            "endColumn": 68,
                            "snippet": {
                              "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 13,
                  "endLine": 295,
                  "endColumn": 48,
                  "snippet": {
                    "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 295,
                            "startColumn": 13,
                            "endLine": 295,
                            "endColumn": 48,
                            "snippet": {
                              "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Server-Side Request Forgery",
          "level": "error",
          "message": {
            "text": "Server-Side Request Forgery"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 39,
                  "endLine": 77,
                  "endColumn": 54,
                  "snippet": {
                    "text": "javax.imageio.ImageIO.read(in)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 77,
                            "startColumn": 39,
                            "endLine": 77,
                            "endColumn": 54,
                            "snippet": {
                              "text": "javax.imageio.ImageIO.read(in)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 21,
                  "endLine": 292,
                  "endColumn": 68,
                  "snippet": {
                    "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 292,
                            "startColumn": 21,
                            "endLine": 292,
                            "endColumn": 68,
                            "snippet": {
                              "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 13,
                  "endLine": 295,
                  "endColumn": 48,
                  "snippet": {
                    "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 295,
                            "startColumn": 13,
                            "endLine": 295,
                            "endColumn": 48,
                            "snippet": {
                              "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Server-Side Request Forgery",
          "level": "error",
          "message": {
            "text": "Server-Side Request Forgery"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 39,
                  "endLine": 77,
                  "endColumn": 54,
                  "snippet": {
                    "text": "javax.imageio.ImageIO.read(in)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 77,
                            "startColumn": 39,
                            "endLine": 77,
                            "endColumn": 54,
                            "snippet": {
                              "text": "javax.imageio.ImageIO.read(in)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 21,
                  "endLine": 292,
                  "endColumn": 68,
                  "snippet": {
                    "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 292,
                            "startColumn": 21,
                            "endLine": 292,
                            "endColumn": 68,
                            "snippet": {
                              "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 13,
                  "endLine": 295,
                  "endColumn": 48,
                  "snippet": {
                    "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 295,
                            "startColumn": 13,
                            "endLine": 295,
                            "endColumn": 48,
                            "snippet": {
                              "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Server-Side Request Forgery",
          "level": "error",
          "message": {
            "text": "Server-Side Request Forgery"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 39,
                  "endLine": 77,
                  "endColumn": 54,
                  "snippet": {
                    "text": "javax.imageio.ImageIO.read(in)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 77,
                            "startColumn": 39,
                            "endLine": 77,
                            "endColumn": 54,
                            "snippet": {
                              "text": "javax.imageio.ImageIO.read(in)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 21,
                  "endLine": 292,
                  "endColumn": 68,
                  "snippet": {
                    "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 292,
                            "startColumn": 21,
                            "endLine": 292,
                            "endColumn": 68,
                            "snippet": {
                              "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 13,
                  "endLine": 295,
                  "endColumn": 48,
                  "snippet": {
                    "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 295,
                            "startColumn": 13,
                            "endLine": 295,
                            "endColumn": 48,
                            "snippet": {
                              "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Server-Side Request Forgery",
          "level": "error",
          "message": {
            "text": "Server-Side Request Forgery"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 25,
                  "endLine": 129,
                  "endColumn": 40,
                  "snippet": {
                    "text": "javax.imageio.ImageIO.read(in)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 129,
                            "startColumn": 25,
                            "endLine": 129,
                            "endColumn": 40,
                            "snippet": {
                              "text": "javax.imageio.ImageIO.read(in)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 21,
                  "endLine": 292,
                  "endColumn": 68,
                  "snippet": {
                    "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 292,
                            "startColumn": 21,
                            "endLine": 292,
                            "endColumn": 68,
                            "snippet": {
                              "text": "new java.io.File((rootPath + java.io.File.separator) + avatarName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 13,
                  "endLine": 295,
                  "endColumn": 48,
                  "snippet": {
                    "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/avatar/AvatarUploadServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 295,
                            "startColumn": 13,
                            "endLine": 295,
                            "endColumn": 48,
                            "snippet": {
                              "text": "java.nio.file.Files.deleteIfExists(file.toPath())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/file/LocalFsFileService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 39,
                  "endLine": 222,
                  "endColumn": 69,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.MD_5)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/file/LocalFsFileService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 40,
                  "endLine": 223,
                  "endColumn": 71,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.SHA_1)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashInputStream.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 39,
                  "endColumn": 60,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.MD_5)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashInputStream.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 31,
                  "endLine": 40,
                  "endColumn": 62,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.SHA_1)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/file/S3FileService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 39,
                  "endLine": 318,
                  "endColumn": 69,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.MD_5)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/file/S3FileService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 319,
                  "startColumn": 40,
                  "endLine": 319,
                  "endColumn": 71,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.SHA_1)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 39,
                  "endLine": 142,
                  "endColumn": 69,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.MD_5)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/AESUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 19,
                  "endLine": 27,
                  "endColumn": 52,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(\"SHA-1\")"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/project/ProjectLfsServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 30,
                  "endLine": 303,
                  "endColumn": 107,
                  "snippet": {
                    "text": "new java.io.File((gitflicPathComponent.getRepositoryDir() + java.io.File.separator) + project.getRepositoryFilePath())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/project/ProjectLfsServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 302,
                            "startColumn": 30,
                            "endLine": 303,
                            "endColumn": 107,
                            "snippet": {
                              "text": "new java.io.File((gitflicPathComponent.getRepositoryDir() + java.io.File.separator) + project.getRepositoryFilePath())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/project/RemovedProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 35,
                  "endLine": 60,
                  "endColumn": 72,
                  "snippet": {
                    "text": "java.nio.file.FileSystems.getDefault().getPath(path)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/project/RemovedProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 60,
                            "startColumn": 35,
                            "endLine": 60,
                            "endColumn": 72,
                            "snippet": {
                              "text": "java.nio.file.FileSystems.getDefault().getPath(path)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Exposure of System Data to an Unauthorized Control Sphere",
          "level": "note",
          "message": {
            "text": "Exposure of Sensitive System Information to an Unauthorized Control Sphere"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/project/RemovedProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 17,
                  "endLine": 62,
                  "endColumn": 44,
                  "snippet": {
                    "text": "java.nio.file.Files.exists(repositoryPath)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Deletion",
          "level": "error",
          "message": {
            "text": "Arbitrary File Deletion"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/project/RemovedProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 17,
                  "endLine": 63,
                  "endColumn": 75,
                  "snippet": {
                    "text": "org.apache.commons.io.FileUtils.forceDelete(new java.io.File(repositoryPath.toString()))"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/project/RemovedProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 63,
                            "startColumn": 17,
                            "endLine": 63,
                            "endColumn": 75,
                            "snippet": {
                              "text": "org.apache.commons.io.FileUtils.forceDelete(new java.io.File(repositoryPath.toString()))"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/project/RemovedProjectServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 39,
                  "endLine": 63,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repositoryPath.toString())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/project/RemovedProjectServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 63,
                            "startColumn": 39,
                            "endLine": 63,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repositoryPath.toString())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/sast/SastReportParserImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 30,
                  "endLine": 75,
                  "endColumn": 61,
                  "snippet": {
                    "text": "java.nio.file.Files.newInputStream(sastReport)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/sast/SastReportParserImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 75,
                            "startColumn": 30,
                            "endLine": 75,
                            "endColumn": 61,
                            "snippet": {
                              "text": "java.nio.file.Files.newInputStream(sastReport)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 28,
                  "endLine": 429,
                  "endColumn": 73,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 429,
                            "startColumn": 28,
                            "endLine": 429,
                            "endColumn": 73,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 32,
                  "endLine": 430,
                  "endColumn": 82,
                  "snippet": {
                    "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/RepositoryServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 430,
                            "startColumn": 32,
                            "endLine": 430,
                            "endColumn": 82,
                            "snippet": {
                              "text": "new java.io.File(repository.getDirectory(), \"objects/pack\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Potential Path Traversal",
          "level": "note",
          "message": {
            "text": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/service/transport/FileSendServiceImpl.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 21,
                  "endLine": 32,
                  "endColumn": 54,
                  "snippet": {
                    "text": "new java.io.File(repositoryPath, fileName)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/service/transport/FileSendServiceImpl.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 32,
                            "startColumn": 21,
                            "endLine": 32,
                            "endColumn": 54,
                            "snippet": {
                              "text": "new java.io.File(repositoryPath, fileName)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/FileSendUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 27,
                  "endLine": 47,
                  "endColumn": 57,
                  "snippet": {
                    "text": "new java.io.RandomAccessFile(file, \"r\")"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/FileSendUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 47,
                            "startColumn": 27,
                            "endLine": 47,
                            "endColumn": 57,
                            "snippet": {
                              "text": "new java.io.RandomAccessFile(file, \"r\")"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 35,
                  "endLine": 159,
                  "endColumn": 59,
                  "snippet": {
                    "text": "new java.io.FileInputStream(file)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 159,
                            "startColumn": 35,
                            "endLine": 159,
                            "endColumn": 59,
                            "snippet": {
                              "text": "new java.io.FileInputStream(file)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 39,
                  "endLine": 126,
                  "endColumn": 69,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.MD_5)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 35,
                  "endLine": 159,
                  "endColumn": 59,
                  "snippet": {
                    "text": "new java.io.FileInputStream(file)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 159,
                            "startColumn": 35,
                            "endLine": 159,
                            "endColumn": 59,
                            "snippet": {
                              "text": "new java.io.FileInputStream(file)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 39,
                  "endLine": 48,
                  "endColumn": 70,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.SHA_1)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Weak Cryptographic Hash",
          "level": "note",
          "message": {
            "text": "Weak Cryptographic Hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 39,
                  "endLine": 33,
                  "endColumn": 70,
                  "snippet": {
                    "text": "java.security.MessageDigest.getInstance(com.gitflic.core.util.HashUtil.SHA_1)"
                  }
                }
              }
            }
          ],
          "properties": {
            "tags": [
              "WEAKNESS"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 35,
                  "endLine": 159,
                  "endColumn": 59,
                  "snippet": {
                    "text": "new java.io.FileInputStream(file)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 159,
                            "startColumn": 35,
                            "endLine": 159,
                            "endColumn": 59,
                            "snippet": {
                              "text": "new java.io.FileInputStream(file)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 35,
                  "endLine": 159,
                  "endColumn": 59,
                  "snippet": {
                    "text": "new java.io.FileInputStream(file)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 159,
                            "startColumn": 35,
                            "endLine": 159,
                            "endColumn": 59,
                            "snippet": {
                              "text": "new java.io.FileInputStream(file)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Reading",
          "level": "error",
          "message": {
            "text": "Arbitrary File Reading"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 35,
                  "endLine": 159,
                  "endColumn": 59,
                  "snippet": {
                    "text": "new java.io.FileInputStream(file)"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/HashUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 159,
                            "startColumn": 35,
                            "endLine": 159,
                            "endColumn": 59,
                            "snippet": {
                              "text": "new java.io.FileInputStream(file)"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Arbitrary File Creation",
          "level": "error",
          "message": {
            "text": "Arbitrary File Creation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/PipelineUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 17,
                  "endLine": 127,
                  "endColumn": 41,
                  "snippet": {
                    "text": "sastFile.createNewFile()"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/PipelineUtils.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 127,
                            "startColumn": 17,
                            "endLine": 127,
                            "endColumn": 41,
                            "snippet": {
                              "text": "sastFile.createNewFile()"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Log Forging",
          "message": {
            "text": "Log Forging"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 86,
                  "snippet": {
                    "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.error(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_ERROR_PATTERN, response.getStatus(), response.getBody())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 19,
                            "startColumn": 9,
                            "endLine": 19,
                            "endColumn": 86,
                            "snippet": {
                              "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.error(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_ERROR_PATTERN, response.getStatus(), response.getBody())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Log Forging",
          "message": {
            "text": "Log Forging"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 86,
                  "snippet": {
                    "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.error(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_ERROR_PATTERN, response.getStatus(), response.getBody())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 19,
                            "startColumn": 9,
                            "endLine": 19,
                            "endColumn": 86,
                            "snippet": {
                              "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.error(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_ERROR_PATTERN, response.getStatus(), response.getBody())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Log Forging",
          "message": {
            "text": "Log Forging"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 9,
                  "endLine": 14,
                  "endColumn": 80,
                  "snippet": {
                    "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.trace(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_PATTERN, response.getStatus(), response.getBody())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 14,
                            "startColumn": 9,
                            "endLine": 14,
                            "endColumn": 80,
                            "snippet": {
                              "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.trace(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_PATTERN, response.getStatus(), response.getBody())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Log Forging",
          "message": {
            "text": "Log Forging"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 9,
                  "endLine": 14,
                  "endColumn": 80,
                  "snippet": {
                    "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.trace(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_PATTERN, response.getStatus(), response.getBody())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 14,
                            "startColumn": 9,
                            "endLine": 14,
                            "endColumn": 80,
                            "snippet": {
                              "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.trace(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_PATTERN, response.getStatus(), response.getBody())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Log Forging",
          "message": {
            "text": "Log Forging"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 86,
                  "snippet": {
                    "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.debug(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_PATTERN, response.getStatus(), response.getStatusText())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 15,
                            "startColumn": 9,
                            "endLine": 15,
                            "endColumn": 86,
                            "snippet": {
                              "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.debug(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_PATTERN, response.getStatus(), response.getStatusText())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        },
        {
          "ruleId": "Log Forging",
          "message": {
            "text": "Log Forging"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 86,
                  "snippet": {
                    "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.debug(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_PATTERN, response.getStatus(), response.getStatusText())"
                  }
                }
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "./src/main/java/com/gitflic/core/util/api/impl/AbstractApiUtil.java",
                            "uriBaseId": "SRCROOT"
                          },
                          "region": {
                            "startLine": 15,
                            "startColumn": 9,
                            "endLine": 15,
                            "endColumn": 86,
                            "snippet": {
                              "text": "com.gitflic.core.util.api.impl.AbstractApiUtil.LOGGER.debug(com.gitflic.core.util.api.impl.AbstractApiUtil.LOG_API_PATTERN, response.getStatus(), response.getStatusText())"
                            }
                          }
                        },
                        "message": {
                          "text": "Exit point"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "tags": [
              "VULNERABILITY"
            ]
          }
        }
      ],
      "translations": [
        {
          "name": "Positive Technologies Application Inspector",
          "rules": [
            {
              "id": "Weak Cryptographic Hash",
              "name": "Уязвимые функции хэширования",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Direct Use of Threads",
              "name": "Прямое использование потоков",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Potential Path Traversal",
              "name": "Некорректные ограничения путей для каталогов (Выход за пределы каталога)",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Static Random Number Generator",
              "name": "Статический генератор случайных чисел",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Log Forging",
              "name": "Подделка записи файла журнала",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Poor Logging Practice Logger",
              "name": "Логгер без модификаторов final и static",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Arbitrary File Creation",
              "name": "Создание произвольного файла",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Method Without Super clone",
              "name": "Метод clone() не использует super.clone()",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Hardcoded Password PM",
              "name": "Использование жестко закодированного пароля",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Use of Insufficiently Random Values",
              "name": "Использование недостаточно случайных значений",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Arbitrary File Deletion",
              "name": "Удаление произвольного файла",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Arbitrary File Reading",
              "name": "Чтение произвольного файла",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Missing Encryption of Sensitive Data",
              "name": "Отсутствует шифрование важных данных",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Class defines clone but not implement Cloneable",
              "name": "Класс с объявленным методом clone, но не реализующий интерфейс Cloneable",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Exposure of System Data to an Unauthorized Control Sphere",
              "name": "Разглашение важной системной информации неавторизованным лицам",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Empty Default Exception Handler",
              "name": "Пустой блок обработки исключений",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Use of Function with Inconsistent Implementations",
              "name": "Использование функции с непоследовательной реализацией",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Server-Side Request Forgery",
              "name": "Подделка запроса со стороны сервера",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "vulnerability"
                ]
              }
            },
            {
              "id": "Override equals method without hashCode",
              "name": "Использование метода equals без переопределения метода hashCode и наоборот",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            },
            {
              "id": "Information Exposure Through Comments",
              "name": "Включение важной информации в комментарии исходного кода",
              "fullDescription": {},
              "properties": {
                "tags": [
                  "weakness"
                ]
              }
            }
          ],
          "language": "ru-RU"
        }
      ]
    }
  ]
}